@prefix rdfcv: <http://www.dr-thomashartmann.de/phd-thesis/rdf-validation/vocabularies/rdf-constraints-vocabulary#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms#> .
@prefix : <http://example.com/constraints#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix func: <http://www.w3.org/2007/rif-builtin-function#> .
@prefix pred: <http://www.w3.org/2007/rif-builtin-predicate#> .
@prefix prolog: <http://eulersharp.sourceforge.net/2003/03swap/prolog#>.
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@base <http://example.com/constraints#> .



{
?constraint a rdfcv:SimpleConstraint ;
  :constraintType :PropertyRange ;
  rdfcv:constrainingElement :property-range ;
  rdfcv:leftProperties ?p ;
  rdfcv:classes ?c .
?x ?p ?o.
_:x e:findall (1 {?o :in ?c} ()).

}
=>
{
_:x a :constraintViolation;
    :violatedConstraint ?constraint;
    :property ?p;
    :object ?o;
    :expectedRange ?c.
}.

{?o a rdf:langString}
<=
{
  (?o) func:lang-from-PlainLiteral ?v.
  ?v log:notEqualTo "".
}.


{?o :in ?c}
<=
{
?o a ?c
}.

{?o :in ?c}
<=
{ 
(?some ?c) log:dtlit ?o .
}.
