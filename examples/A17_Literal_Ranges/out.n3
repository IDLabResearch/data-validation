#Processed by EYE rel. v17.0131.1345 josd
#eye data.ttl constraint.ttl rule.n3 --query ../query.n3

PREFIX rdfcv: <http://www.dr-thomashartmann.de/phd-thesis/rdf-validation/vocabularies/rdf-constraints-vocabulary#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dcterms: <http://purl.org/dc/terms#>
PREFIX : <http://example.com/constraints#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX math: <http://www.w3.org/2000/10/swap/math#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX func: <http://www.w3.org/2007/rif-builtin-function#>
PREFIX pred: <http://www.w3.org/2007/rif-builtin-predicate#>
PREFIX prolog: <http://eulersharp.sourceforge.net/2003/03swap/prolog#>
PREFIX string: <http://www.w3.org/2000/10/swap/string#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[] a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:component <#lemma4>;
  r:component <#lemma5>;
  r:component <#lemma6>;
  r:gives {
    _:sk_0 a :constraintViolation.
    _:sk_0 :violatedConstraint :example_constraint_A17a.
    _:sk_0 :constrainingElement xsd:maxInclusive.
    _:sk_0 :property :latitude.
    _:sk_0 :value "99"^^xsd:nonNegativeInteger.
    _:sk_0 :restriction 90 .
  }.

<#lemma1> a r:Inference; 
  r:gives {
    _:sk_0 a :constraintViolation.
  }; 
  r:evidence (
    <#lemma7>
    <#lemma7>
  );
  r:rule <#lemma8>.

<#lemma2> a r:Inference; 
  r:gives {
    _:sk_0 :violatedConstraint :example_constraint_A17a.
  }; 
  r:evidence (
    <#lemma7>
    <#lemma7>
  );
  r:rule <#lemma8>.

<#lemma3> a r:Inference; 
  r:gives {
    _:sk_0 :constrainingElement xsd:maxInclusive.
  }; 
  r:evidence (
    <#lemma7>
    <#lemma7>
  );
  r:rule <#lemma8>.

<#lemma4> a r:Inference; 
  r:gives {
    _:sk_0 :property :latitude.
  }; 
  r:evidence (
    <#lemma7>
    <#lemma7>
  );
  r:rule <#lemma8>.

<#lemma5> a r:Inference; 
  r:gives {
    _:sk_0 :value "99"^^xsd:nonNegativeInteger.
  }; 
  r:evidence (
    <#lemma7>
    <#lemma7>
  );
  r:rule <#lemma8>.

<#lemma6> a r:Inference; 
  r:gives {
    _:sk_0 :restriction 90 .
  }; 
  r:evidence (
    <#lemma7>
    <#lemma7>
  );
  r:rule <#lemma8>.

<#lemma7> a r:Inference; 
  r:gives {
    _:sk_0 a :constraintViolation.
    _:sk_0 :violatedConstraint :example_constraint_A17a.
    _:sk_0 :constrainingElement xsd:maxInclusive.
    _:sk_0 :property :latitude.
    _:sk_0 :value "99"^^xsd:nonNegativeInteger.
    _:sk_0 :restriction 90 .
  }; 
  r:evidence (
    <#lemma9>
    <#lemma10>
    <#lemma11>
    <#lemma12>
    <#lemma13>
    <#lemma14>
    <#lemma15>
    <#lemma16>
    <#lemma17>
    [ a r:Fact; r:gives {("99" xsd:nonNegativeInteger) log:dtlit "99"^^xsd:nonNegativeInteger}]
    <#lemma18>
  );
  r:rule <#lemma19>.

<#lemma8> a r:Extraction; 
  r:gives {
    {?x_0_1 a :constraintViolation.
      ?x_0_1 ?x_1_1 ?x_2_1} => {?x_0_1 ?x_1_1 ?x_2_1}.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/query.n3>].

<#lemma9> a r:Extraction; 
  r:gives {
    :example_constraint_A17a a rdfcv:SimpleConstraint.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/constraint.ttl>].

<#lemma10> a r:Extraction; 
  r:gives {
    :example_constraint_A17a :constraintType :LiteralRanges.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/constraint.ttl>].

<#lemma11> a r:Extraction; 
  r:gives {
    :example_constraint_A17a rdfcv:constrainingElement xsd:maxInclusive.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/constraint.ttl>].

<#lemma12> a r:Extraction; 
  r:gives {
    :example_constraint_A17a rdfcv:contextClass :Spatial-Feature.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/constraint.ttl>].

<#lemma13> a r:Extraction; 
  r:gives {
    :example_constraint_A17a rdfcv:leftProperties :latitude.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/constraint.ttl>].

<#lemma14> a r:Extraction; 
  r:gives {
    :example_constraint_A17a rdfcv:classes xsd:nonNegativeInteger.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/constraint.ttl>].

<#lemma15> a r:Extraction; 
  r:gives {
    :example_constraint_A17a rdfcv:constrainingValue 90 .
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/constraint.ttl>].

<#lemma16> a r:Extraction; 
  r:gives {
    :something a :Spatial-Feature.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/data.ttl>].

<#lemma17> a r:Extraction; 
  r:gives {
    :something :latitude "99"^^xsd:nonNegativeInteger.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/data.ttl>].

<#lemma18> a r:Inference; 
  r:gives {
    ("99"^^xsd:nonNegativeInteger xsd:maxInclusive 90) :literalRangeCheck false.
  }; 
  r:evidence (
    [ a r:Fact; r:gives {"99"^^xsd:nonNegativeInteger math:greaterThan 90}]
  );
  r:rule <#lemma20>.

<#lemma19> a r:Extraction; 
  r:gives {
    {?x_0_2 a rdfcv:SimpleConstraint.
      ?x_0_2 :constraintType :LiteralRanges.
      ?x_0_2 rdfcv:constrainingElement ?x_1_2.
      ?x_0_2 rdfcv:contextClass ?x_2_2.
      ?x_0_2 rdfcv:leftProperties ?x_3_2.
      ?x_0_2 rdfcv:classes ?x_4_2.
      ?x_0_2 rdfcv:constrainingValue ?x_5_2.
      ?x_6_2 a ?x_2_2.
      ?x_6_2 ?x_3_2 ?x_7_2.
      (?x_8_2 ?x_4_2) log:dtlit ?x_7_2.
      (?x_7_2 ?x_1_2 ?x_5_2) :literalRangeCheck false} => {_:x_9_2 a :constraintViolation.
      _:x_9_2 :violatedConstraint ?x_0_2.
      _:x_9_2 :constrainingElement ?x_1_2.
      _:x_9_2 :property ?x_3_2.
      _:x_9_2 :value ?x_7_2.
      _:x_9_2 :restriction ?x_5_2}.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/rule.n3>].

<#lemma20> a r:Extraction; 
  r:gives {
    {(?x_0_3 xsd:maxInclusive ?x_1_3) :literalRangeCheck false} <= {?x_0_3 math:greaterThan ?x_1_3}.
  };
  r:because [ a r:Parsing; r:source <file:///media/doerthe/4EC6F987C6F97017/store/RDF-Valdation/Val/constraint-rules/examples/A17_Literal_Ranges/rule.n3>].

#2017-02-08T15:16:31.334Z in=23 out=6 ent=12 step=14 brake=2 inf=87519 sec=0.077 inf/sec=1136610
#ENDS

