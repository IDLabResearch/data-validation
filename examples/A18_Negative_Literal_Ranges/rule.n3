@prefix rdfcv: <http://www.dr-thomashartmann.de/phd-thesis/rdf-validation/vocabularies/rdf-constraints-vocabulary#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms#> .
@prefix : <http://example.com/constraints#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix func: <http://www.w3.org/2007/rif-builtin-function#> .
@prefix pred: <http://www.w3.org/2007/rif-builtin-predicate#> .
@prefix prolog: <http://eulersharp.sourceforge.net/2003/03swap/prolog#>.
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@base <http://example.com/constraints#> .



{
?constraint1 a rdfcv:SimpleConstraint ;
  :relatedTo  ?constraint2; 
  :constraintType :NegativeLiteralRanges ; 
  rdfcv:constrainingElement ?fst ;
  rdfcv:contextClass  ?Class ;
  rdfcv:leftProperties ?p ;
  rdfcv:classes ?c ;
  rdfcv:constrainingValue ?v1 .

?constraint2 a rdfcv:SimpleConstraint ;
  :constraintType :NegativeLiteralRanges ; 
  rdfcv:constrainingElement ?scnd ;
  rdfcv:contextClass  ?Class ;
  rdfcv:leftProperties ?p ;
  rdfcv:classes ?c ;
  rdfcv:constrainingValue ?v2 .
?x a ?Class.
?x ?p ?v.
(?some ?c) log:dtlit ?v .

(?v ?fst ?scnd ?v1 ?v2) :negativeLiteralRangeCheck false.
}
=>
{
_:x a :constraintViolation;
    :violatedConstraint ?constraint1;
    :violatedConstraint ?constraint2;
    :constrainingElement ?fst;
    :constrainingElement ?scnd;
    :property ?p;
    :value ?v;
    :restriction (?v1 ?v2).
}.


{(?v xsd:minInclusive xsd:maxInclusive ?v1 ?v2) :negativeLiteralRangeCheck false. }
<=
{
?v math:notLessThan ?v1.
?v math:notGreaterThan ?v2.
}.





